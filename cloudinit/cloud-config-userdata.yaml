#cloud-config
bootcmd:
  - echo ${private_ip_address} ${host_name} >> /etc/hosts # Make sure this still resolves when cutting over DNS
  # Disable automatic updates to get rid of the following race condition:
  #   Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)
  - sudo apt remove unattended-upgrades -y
  #- while ( fuser /var/lib/dpkg/lock >/dev/null 2>&1 ); do sleep 5; done;
  # Get apt repository signing keys
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0    # GitHub
  - sudo apt-add-repository https://cli.github.com/packages
  - curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -                  # Helm
  - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add # Kubernetes
  - curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - # Microsoft

apt:
  sources:
    git-core:
      source: "ppa:git-core/ppa"
    helm-stable-debian.list:
      source: "deb https://baltocdn.com/helm/stable/debian/ all main"
    kubernetes.list:
      source: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    azure-cli.list:
      source: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ bionic main"
    microsoft-prod.list:
      source: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main"

package_update: true
  # Disable package upgrades to get rid of the following error
  #   Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)
# package_upgrade: true
packages:
  # Core
  - apt-transport-https
  - ca-certificates
  - curl
  # - dirmngr
  - gnupg
  - lsb-release
  - software-properties-common
  - wget
  # Tools
  - ansible
  - coreutils
  - dnsutils
  - docker
  - dos2unix
  - findutils
  - fish
  - fuse
  - git
  - htop
  - jq
  - less
  - man
  - mc
  - nano
  # - nmap
  - node-typescript
  - python-minimal
  - sed
  - snapd
  - telnet
  - tmux
  - traceroute
  - tree
  - unixodbc-dev
  - unzip
  - wget
  - whois
  # Services
  - dnsmasq
  # GitHub
  # - gh
  # Kubernetes
  - helm
  - kubectl
  # Microsoft
  - azure-cli
  - azure-functions-core-tools
  - blobfuse
  - dotnet-sdk-3.1
  # - msodbcsql17
  # - mssql-tools
  - powershell

write_files: 
  # Configure dnsmasq
  - path: /etc/resolv.conf.new
    # Azure DNS
    content: |
      # This file has been created by Terraform -> cloud-config 
      nameserver 127.0.0.1
      nameserver 168.63.129.16 # Fall back to Azure DNS if dnsmasq times out
      options trust-ad
      search ${nic_domain_suffix}
      search ${domain_suffix}
  - path: /etc/dnsmasq.conf
    content: |
      # This file has been created by Terraform -> cloud-config 
      listen-address=::1,127.0.0.1,${private_ip_address}
      expand-hosts
      no-resolv
      server=168.63.129.16
      #server=/${domain_suffix}/168.63.129.16
  - path: /home/${user_name}/.config/powershell/setup_linux_vm.ps1
    encoding: base64
    content: ${setup_linux_vm_ps1}
    permissions: '0744'
  - path: /home/${user_name}/.config/powershell/environment.ps1
    encoding: base64
    content: ${environment_ps1}
    permissions: '0744'
  - path: /etc/environment
    content: |
      GEEKZTER_AGENT_SUBNET_ID="${subnet_id}"
      GEEKZTER_AGENT_VIRTUAL_NETWORK_ID="${virtual_network_id}"
    append: true

runcmd:
  # DNS: replace resolved with dnsmasq
  - dnsmasq --test
  - sudo systemctl disable systemd-resolved
  - sudo systemctl stop systemd-resolved
  - sudo systemctl start dnsmasq.service
  - sudo cp /etc/resolv.conf /etc/resolv.backup
  - sudo rm /etc/resolv.conf
  - sudo cp /etc/resolv.conf.new /etc/resolv.conf
  - sudo chattr +i /etc/resolv.conf # Mark immutable to prevent NetworkManager from making changes
  - sudo systemctl restart dnsmasq.service
  # Microsoft packages
  - sudo ACCEPT_EULA=Y apt install msodbcsql17 -y
  - sudo ACCEPT_EULA=Y apt install mssql-tools -y
  # User configuration
  - chown -R ${user_name}:${user_name} /home/${user_name}
  - 'su -c "curl -sk https://raw.githubusercontent.com/geekzter/bootstrap-os/master/linux/bootstrap_linux.sh | sudo bash -s" ${user_name}'
  - chown -R ${user_name}:${user_name} /home/${user_name}
  - 'su -c "~/.config/powershell/setup_linux_vm.ps1" ${user_name}'
  # Automatic updates: re-enable them
  - sudo apt install unattended-upgrades -y

final_message: "${host_name} is up after $UPTIME seconds"
