#!/usr/bin/env pwsh
<# 
.SYNOPSIS 
    Use this to connect to a Linux host
    
    This file is generated by Terraform
    https://registry.terraform.io/providers/hashicorp/local/latest/docs/resources/file
    https://www.terraform.io/language/functions/templatefile
#> 
param ( 
    [parameter(Mandatory=$false)]
    [validateset("Bastion", "PrivateHostname", "PrivateIP", "PublicHostname", "PublicIP")]
    [string]
    $Endpoint
) 

if (!$Endpoint) {
    $defaultChoice = 0
    $choices = @(
        [System.Management.Automation.Host.ChoiceDescription]::new("&Bastion")
        [System.Management.Automation.Host.ChoiceDescription]::new("PrivateHost&name")
        [System.Management.Automation.Host.ChoiceDescription]::new("&PrivateIP")
        [System.Management.Automation.Host.ChoiceDescription]::new("Public&Hostname")
        [System.Management.Automation.Host.ChoiceDescription]::new("Public&IP")
        [System.Management.Automation.Host.ChoiceDescription]::new("&Exit", "Abort operation")
    )
    $decision = $Host.UI.PromptForChoice("Connect", "How do you want to connect to the Linux VM?", $choices, $defaultChoice)
    Write-Host $choices[$decision].HelpMessage
    $choices[$decision].Label -replace "&", "" | Set-Variable Endpoint
}

switch ($Endpoint)
{
    "Bastion" {
        az network bastion ssh --name "${bastion_name}" `
                               --resource-group "${resource_group_name}" `
                               --target-resource-id "${vm_id}" `
                               --auth-type "ssh-key" `
                               --username "${user_name}" `
                               --ssh-key ${ssh_private_key}
    }
    "PrivateIP" {
        ssh -i ${ssh_private_key} ${user_name}@${private_ip_address}
    }
    "PrivateHostname" {
        ssh -i ${ssh_private_key} ${user_name}@${private_fqdn}
    }
    "PublicIP" {
        ssh -i ${ssh_private_key} ${user_name}@${public_ip_address}
    }
    "PublicHostname" {
        ssh -i ${ssh_private_key} ${user_name}@${public_fqdn}
    }
}
